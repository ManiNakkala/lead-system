{"ast":null,"code":"var _jsxFileName = \"G:\\\\lead-gen-system-complete\\\\lead-gen-system\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    company: '',\n    message: ''\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState(false);\n  const validateEmail = email => /\\S+@\\S+\\.\\S+/.test(email);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    if (!formData.name || !formData.email) {\n      setError('Name and email are required.');\n      return;\n    }\n    if (!validateEmail(formData.email)) {\n      setError('Invalid email format.');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5678/webhook/lead-webhook', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        setSuccess(true);\n        setFormData({\n          name: '',\n          email: '',\n          company: '',\n          message: ''\n        });\n      } else {\n        setError('Submission failed.');\n      }\n    } catch (error) {\n      setError('Server error.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lead Generation Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name *\",\n        value: formData.name,\n        onChange: e => setFormData({\n          ...formData,\n          name: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email *\",\n        value: formData.email,\n        onChange: e => setFormData({\n          ...formData,\n          email: e.target.value\n        }),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Company\",\n        value: formData.company,\n        onChange: e => setFormData({\n          ...formData,\n          company: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Message\",\n        value: formData.message,\n        onChange: e => setFormData({\n          ...formData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success\",\n      children: \"Lead submitted successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"N0uKXRG4A7Vij8yB+RrmoopyaO4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","formData","setFormData","name","email","company","message","error","setError","success","setSuccess","validateEmail","test","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["G:/lead-gen-system-complete/lead-gen-system/frontend/src/App.js"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [formData, setFormData] = useState({ name: '', email: '', company: '', message: '' });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState(false);\n\n  const validateEmail = (email) => /\\S+@\\S+\\.\\S+/.test(email);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    if (!formData.name || !formData.email) {\n      setError('Name and email are required.');\n      return;\n    }\n    if (!validateEmail(formData.email)) {\n      setError('Invalid email format.');\n      return;\n    }\n\n    try {\n      const response = await fetch('http://localhost:5678/webhook/lead-webhook', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(formData),\n      });\n      if (response.ok) {\n        setSuccess(true);\n        setFormData({ name: '', email: '', company: '', message: '' });\n      } else {\n        setError('Submission failed.');\n      }\n    } catch (error) {\n      setError('Server error.');\n    }\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h2>Lead Generation Form</h2>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" placeholder=\"Name *\" value={formData.name} onChange={e => setFormData({ ...formData, name: e.target.value })} required />\n        <input type=\"email\" placeholder=\"Email *\" value={formData.email} onChange={e => setFormData({ ...formData, email: e.target.value })} required />\n        <input type=\"text\" placeholder=\"Company\" value={formData.company} onChange={e => setFormData({ ...formData, company: e.target.value })} />\n        <textarea placeholder=\"Message\" value={formData.message} onChange={e => setFormData({ ...formData, message: e.target.value })}></textarea>\n        <button type=\"submit\">Submit</button>\n      </form>\n      {error && <p className=\"error\">{error}</p>}\n      {success && <p className=\"success\">Lead submitted successfully!</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}